// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  role      String   // ASESOR, OPERACIONES, MEDICO, ADMIN
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  emisiones Emision[]
}

model Emision {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  tipoEmision     String   // NUEVO_NEGOCIO, ELIMINACION_PERIODOS, etc.
  persona         String   // FISICA, MORAL
  estado          String   // BORRADOR, EN_REVISION_OCR, etc.
  
  // Datos del solicitante (como texto JSON)
  solicitante     String   // JSON string
  moralInfo       String?  // JSON string
  declaraciones   String?  // JSON string
  supuestosMeta   String?  // JSON string
  ocrFindings     String?  // JSON string
  
  // Relaciones
  documentos      Documento[]
  userId          String   @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Documento {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre      String
  tipo        String   // SOLICITUD_GMM, CONSTANCIA_FISCAL, etc.
  url         String?
  ocrStatus   String   @default("PENDING") // PENDING, OK, INCOMPLETE, ILLEGIBLE
  ocrData     String?  // JSON string
  uploadedAt  DateTime @default(now())
  
  // Relación con emisión
  emisionId   String   @db.ObjectId
  emision     Emision  @relation(fields: [emisionId], references: [id], onDelete: Cascade)
}
